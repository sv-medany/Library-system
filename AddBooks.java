/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project2;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import static java.lang.Integer.parseInt;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author nayro
 */
public class AddBooks extends javax.swing.JFrame {

    ArrayList<Book> Books = new ArrayList();

    public void readFileBooksAdd() throws FileNotFoundException {
        File BookFile = new File("Books.txt");
        Scanner s = new Scanner(BookFile);    //Reads from the file
        while (s.hasNextLine()) {     // checks that the file did not reach the end
            String x = s.nextLine();
            String toks[] = x.split(",");   //the file is csv
            int quantity = parseInt(toks[5]);
            int ID = parseInt(toks[0]);
            int counterIssued = parseInt(toks[6]);
            Book newBook = new Book(ID, toks[1], toks[2], toks[3], toks[4], quantity, counterIssued, toks[7]); //create new librarian with scanned fields using split
            Books.add(newBook);
        }
    }

    public void WriteFileBooksAdd() throws FileNotFoundException {
        File librarianFile = new File("Books.txt");
        PrintWriter x = new PrintWriter(librarianFile);
        for (int i = 0; i < Books.size(); i++) {
            x.println(Books.get(i).getID() + "," + Books.get(i).getCallNo() + "," + Books.get(i).getName() + "," + Books.get(i).getAuthor() + "," + Books.get(i).getPublisher() + "," + Books.get(i).getquantity() + "," + Books.get(i).getCounterIssued() + "," + Books.get(i).getAddedDate());
        }
        x.close();
    }

    /**
     * Creates new form AddBooks
     */
    public AddBooks() throws FileNotFoundException {
        initComponents();
        readFileBooksAdd();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        quantityAdd = new javax.swing.JTextField();
        publisherAdd = new javax.swing.JTextField();
        authorAdd = new javax.swing.JTextField();
        callnoAdd = new javax.swing.JTextField();
        nameAdd = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        addAddBook = new javax.swing.JButton();
        backAdd = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Add Books");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Call No:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Author:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Name:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Quantity");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Publisher:");

        addAddBook.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        addAddBook.setText("Add Books");
        addAddBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addAddBookActionPerformed(evt);
            }
        });

        backAdd.setText("Back");
        backAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                        .addComponent(publisherAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(quantityAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(nameAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(authorAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(callnoAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(81, 81, 81))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(128, 128, 128)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(183, 183, 183)
                        .addComponent(addAddBook, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(backAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(callnoAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(authorAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(publisherAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(quantityAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addAddBook, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(backAdd)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backAddActionPerformed
        LibrarianSection x = new LibrarianSection();
        x.setVisible(true);
        this.hide();
    }//GEN-LAST:event_backAddActionPerformed

    private void addAddBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addAddBookActionPerformed
        String bookName = nameAdd.getText();
        String authorName = authorAdd.getText();
        String callno = callnoAdd.getText();
        String publisher = publisherAdd.getText();
        String quantity = quantityAdd.getText();         //to get input from user
        DateFormat xx = new SimpleDateFormat("dd-MM-YYYY");
        Date date = new Date();
        String addedDate = xx.format(date); //registering current date
        int Error = 0; // tests if there are errors in the input
        int empty = 0; //tests if there is an empty field
        boolean repeated = false; //checks that the call number of the book is unique
        if (bookName.isEmpty() || authorName.isEmpty() || callno.isEmpty() || publisher.isEmpty() || quantity.isEmpty()) { //makes sure the user filled in all the fields
            empty = 1;
            JOptionPane.showMessageDialog(this, "One of the fields is empty, please try again");
        }
        if (bookName.charAt(0) == ' ' || authorName.charAt(0) == ' ' || callno.charAt(0) == ' ' || publisher.charAt(0) == ' ' || quantity.charAt(0) == ' ')//check fields don't start with space
        {
            JOptionPane.showMessageDialog(this, "Your input is imvalid, please try again");
            empty = 1;
        }
        if (empty == 0) {    //no empty fields
            for (int i = 0; i < bookName.length(); i++) {
                char c = bookName.charAt(i);
                if (!Character.isLetter(c) && bookName.charAt(i) != ' ') { //the book's name consists of letters only 
                    JOptionPane.showMessageDialog(this, "The book name is invalid, please try again");
                    Error = 1;
                    break;
                }
            }
            for (int i = 0; i < authorName.length(); i++) {
                char x = authorName.charAt(i);
                if (!Character.isLetter(x) && authorName.charAt(i) != ' ') {//the author's name consists of letters only 
                    JOptionPane.showMessageDialog(this, "The author name is invalid, please try again");
                    Error = 1;
                    break;
                }
            }
            for (int i = 0; i < publisher.length(); i++) {
                char e = publisher.charAt(i);
                if (!Character.isLetter(e) && publisher.charAt(i) != ' ') {//the publisher's name consists of letters only  
                    JOptionPane.showMessageDialog(this, "The publisher name is invalid, please try again");
                    Error = 1;
                    break;
                }
            }
            for (int i = 0; i < quantity.length(); i++) {
                char d = quantity.charAt(i);
                if (!Character.isDigit(d)) {//the quantity is a number 
                    JOptionPane.showMessageDialog(this, "The quantity is invalid, please try again");
                    Error = 1;
                    break;
                }

            }
        }

        if (Error == 0 && empty == 0) {

            int x = Integer.parseInt(quantity);
            if (x <= 0) //checks quantity is positive 
            {
                JOptionPane.showMessageDialog(this, "The quantity is invalid, please try again");
            } else {

                for (int i = 0; i < Books.size(); i++) {
                    if (callno.equals(Books.get(i).getCallNo())) {
                        repeated = true; //book's call number already exists 
                        break;
                    }
                }
                if (!repeated) {
                    Book newBook = new Book(Books.size() + 1, callno, bookName, authorName, publisher, x, 0, addedDate);
                    Books.add(newBook);
                    JOptionPane.showMessageDialog(this, "Book added successfully");
                    try {
                        WriteFileBooksAdd();
                    } catch (FileNotFoundException ex) {
                        Logger.getLogger(AddBooks.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    LibrarianSection z = new LibrarianSection(); //return  to original frame
                    z.setVisible(true);
                    this.hide();
                } else {
                    JOptionPane.showMessageDialog(this, "Call number is not unique, please try again");
                }

            }
        }


    }//GEN-LAST:event_addAddBookActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddBooks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddBooks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddBooks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddBooks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new AddBooks().setVisible(true);
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(AddBooks.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addAddBook;
    private javax.swing.JTextField authorAdd;
    private javax.swing.JButton backAdd;
    private javax.swing.JTextField callnoAdd;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField nameAdd;
    private javax.swing.JTextField publisherAdd;
    private javax.swing.JTextField quantityAdd;
    // End of variables declaration//GEN-END:variables
}
